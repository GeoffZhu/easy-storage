{"version":3,"file":"easy-storage.js","sources":["src/utils.js","src/index.js"],"sourcesContent":["export function logger (msg) {\n  console.warn(`EasyStorage: ${msg}`)\n}","import { logger } from './utils.js'\n\nconst DEFAULT = {\n  type: 'local'\n}\nconst types = ['local', 'session']\n\nlet engine\nexport default class EasyStorage {\n  constructor (options = {}) {\n    if (~types.indexOf(options.type)) {\n      this.type = options.type\n    } else {\n      logger('Type option only support \"local\" & \"session\", use default \"local\".')\n      this.type = DEFAULT.type\n    }\n    engine = window[`${this.type}Storage`]\n  }\n\n  set (key, value) {\n    engine.setItem(key, value)\n  }\n\n  get (key) {\n    engine.getItem(key)\n  }\n\n  remove (key) {\n\n  }\n\n  removeAll () {\n\n  }\n}\n\n\n\n\n"],"names":["logger","msg","warn","DEFAULT","types","engine","EasyStorage","options","indexOf","type","window","key","value","setItem","getItem"],"mappings":";;;;;;AAAO,SAASA,MAAT,CAAiBC,GAAjB,EAAsB;UACnBC,IAAR,mBAA6BD,GAA7B;;;;;;;ACDF,AAEA,IAAME,UAAU;QACR;CADR;AAGA,IAAMC,QAAQ,CAAC,OAAD,EAAU,SAAV,CAAd;;AAEA,IAAIC,eAAJ;;IACqBC;yBACQ;QAAdC,OAAc,uEAAJ,EAAI;;;;QACrB,CAACH,MAAMI,OAAN,CAAcD,QAAQE,IAAtB,CAAL,EAAkC;WAC3BA,IAAL,GAAYF,QAAQE,IAApB;KADF,MAEO;aACE,oEAAP;WACKA,IAAL,GAAYN,QAAQM,IAApB;;aAEOC,OAAU,KAAKD,IAAf,aAAT;;;;;wBAGGE,KAAKC,OAAO;aACRC,OAAP,CAAeF,GAAf,EAAoBC,KAApB;;;;wBAGGD,KAAK;aACDG,OAAP,CAAeH,GAAf;;;;2BAGMA,KAAK;;;gCAIA;;;;;;;;;;;;"}